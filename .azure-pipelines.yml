trigger:
  branches:
    include:
      - master
  tags:
    include:
      - v*
jobs:
  - job: Linux
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - script: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-base latexmk chktex
        displayName: "Install TeX Live"
      - template: .build-steps.yml
        parameters:
          executableName: "texlab"
          archiveFile: "texlab-x86_64-linux.tar.gz"
          archiveType: "tar"
          linux: true
  - job: Windows
    pool:
      vmImage: "vs2017-win2016"
    steps:
      - template: .build-steps.yml
        parameters:
          executableName: "texlab.exe"
          archiveFile: "texlab-x86_64-windows.zip"
          archiveType: "zip"
  - job: macOS
    pool:
      vmImage: "macos-10.14"
    steps:
      - bash: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain none
          echo "##vso[task.prependpath]$HOME/.cargo/bin"
        displayName: "Install rustup"
      - template: .build-steps.yml
        parameters:
          executableName: "texlab"
          archiveFile: "texlab-x86_64-macos.tar.gz"
          archiveType: "tar"
  - job: Publish
    pool:
      vmImage: "ubuntu-16.04"
    dependsOn:
      - Linux
      - Windows
      - macOS
    condition: |
      and(
        contains(variables['Build.SourceBranch'], 'tags'),
        succeeded('Linux'), 
        succeeded('Windows'), 
        succeeded('macOS'))
    steps:
      - download: current
        patterns: "**/texlab*"
      - bash: |
          ver=`echo "$(Build.SourceBranchName)" | cut -c2-`
          echo "##vso[task.setvariable variable=version]$ver"
        displayName: "Set version variable"
      - task: GitHubRelease@0
        inputs:
          gitHubConnection: latex-lsp
          repositoryName: latex-lsp/texlab
          assets: "$(Pipeline.Workspace)/**/texlab*"
        displayName: "Create GitHub release"
